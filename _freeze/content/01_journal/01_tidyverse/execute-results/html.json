{
  "hash": "d9dad3865feb2ba164aeedd1919e3c75",
  "result": {
    "markdown": "---\ntitle: \"Tidyverse\"\nauthor: \"Julius von Sulecki\"\n---\n\n\n# Business Case\n\nI have the role of a data scientist. I have to look for opportunities to improve the sales. We are interested in\n\n-   Sales by year\n-   Sales by year and product family\n\nHere you can see the given example including the plots.\n\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-1_dfff8ec97edc18be5398af5128ce7336'}\n\n```{.r .cell-code}\n# Data Science at TUHH ------------------------------------------------------\n# SALES ANALYSIS ----\n\n# 1.0 Load libraries ----\nlibrary(\"tidyverse\")\n\n# 2.0 Importing Files ----\nbikes <- readxl::read_excel(\"../../bikes/01_raw_data/bikes.xlsx\")\nbikeshops <- readxl::read_excel(\"../../bikes/01_raw_data/bikeshops.xlsx\")\norderlines <- readxl::read_excel(\"../../bikes/01_raw_data/orderlines.xlsx\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> New names:\n#> • `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\n# 3.0 Examining Data ----\n# print(bikes)\n\n# 4.0 Joining Data ----\nbike_orderlines_joined <- orderlines %>%\n  left_join(bikes, by = c(\"product.id\" = \"bike.id\")) %>%\n  left_join(bikeshops, by = c(\"customer.id\" = \"bikeshop.id\"))\n#print(bike_orderlines_joined$category)\n# 5.0 Wrangling Data ----\nbike_orderlines_wrangled <- bike_orderlines_joined %>%\n  separate(col    = category,\n           into   = c(\"category.1\", \"category.2\", \"category.3\"),\n           sep    = \" - \") %>%\n  mutate(total.price = price * quantity) %>%\n  select(-...1, -gender) %>%\n  select(-ends_with(\".id\")) %>%\n  bind_cols(bike_orderlines_joined %>% select(order.id)) %>%\n  select(order.id, contains(\"order\"), contains(\"model\"), contains(\"category\"),\n         price, quantity, total.price,\n         everything()) %>%\n  rename(bikeshop = name) %>%\n  set_names(names(.) %>% str_replace_all(\"\\\\.\", \"_\"))\n\n# 6.0 Business Insights ----\nlibrary(lubridate)\n# 6.1 Sales by Year ----\nsales_by_year <- bike_orderlines_wrangled %>%\n# Step 1 - Manipulate\n  select(order_date, total_price) %>%\n  mutate(year = year(order_date)) %>%\n  group_by(year) %>% \n  summarize(sales = sum(total_price)) %>%\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n#print(sales_by_year)\n# Step 2 - Visualize\nsales_by_year %>%\n  ggplot(aes(x = year, y = sales)) +\n  geom_col(fill = \"#2DC6D6\") + # Use geom_col for a bar plot\n  geom_label(aes(label = sales_text)) + # Adding labels to the bars\n  geom_smooth(method = \"lm\", se = FALSE) + # Adding a trendline\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title    = \"Revenue by year\",\n    subtitle = \"Upward Trend\",\n    x = \"\", # Override defaults for x and y\n    y = \"Revenue\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 6.2 Sales by Year and Category 2 ----\n\n  # Step 1 - Manipulate\nsales_by_year_cat_1 <- bike_orderlines_wrangled %>%\n  select(order_date, total_price, category_1) %>%\n  mutate(year = year(order_date)) %>%\n  group_by(year, category_1) %>%\n  summarise(sales = sum(total_price)) %>%\n  ungroup() %>%\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `summarise()` has grouped output by 'year'. You can override using the\n#> `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nsales_by_year_cat_1  \n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"year\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"category_1\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"sales\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sales_text\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"2015\",\"2\":\"E-Bikes\",\"3\":\"1599048\",\"4\":\"1.599.048 €\"},{\"1\":\"2015\",\"2\":\"Gravel\",\"3\":\"663025\",\"4\":\"663.025 €\"},{\"1\":\"2015\",\"2\":\"Hybrid / City\",\"3\":\"502512\",\"4\":\"502.512 €\"},{\"1\":\"2015\",\"2\":\"Mountain\",\"3\":\"3254289\",\"4\":\"3.254.289 €\"},{\"1\":\"2015\",\"2\":\"Road\",\"3\":\"3911408\",\"4\":\"3.911.408 €\"},{\"1\":\"2016\",\"2\":\"E-Bikes\",\"3\":\"1916469\",\"4\":\"1.916.469 €\"},{\"1\":\"2016\",\"2\":\"Gravel\",\"3\":\"768794\",\"4\":\"768.794 €\"},{\"1\":\"2016\",\"2\":\"Hybrid / City\",\"3\":\"512346\",\"4\":\"512.346 €\"},{\"1\":\"2016\",\"2\":\"Mountain\",\"3\":\"3288733\",\"4\":\"3.288.733 €\"},{\"1\":\"2016\",\"2\":\"Road\",\"3\":\"4244165\",\"4\":\"4.244.165 €\"},{\"1\":\"2017\",\"2\":\"E-Bikes\",\"3\":\"2617352\",\"4\":\"2.617.352 €\"},{\"1\":\"2017\",\"2\":\"Gravel\",\"3\":\"1006839\",\"4\":\"1.006.839 €\"},{\"1\":\"2017\",\"2\":\"Hybrid / City\",\"3\":\"784491\",\"4\":\"784.491 €\"},{\"1\":\"2017\",\"2\":\"Mountain\",\"3\":\"4482867\",\"4\":\"4.482.867 €\"},{\"1\":\"2017\",\"2\":\"Road\",\"3\":\"5618742\",\"4\":\"5.618.742 €\"},{\"1\":\"2018\",\"2\":\"E-Bikes\",\"3\":\"2151550\",\"4\":\"2.151.550 €\"},{\"1\":\"2018\",\"2\":\"Gravel\",\"3\":\"792234\",\"4\":\"792.234 €\"},{\"1\":\"2018\",\"2\":\"Hybrid / City\",\"3\":\"576805\",\"4\":\"576.805 €\"},{\"1\":\"2018\",\"2\":\"Mountain\",\"3\":\"4090277\",\"4\":\"4.090.277 €\"},{\"1\":\"2018\",\"2\":\"Road\",\"3\":\"4630987\",\"4\":\"4.630.987 €\"},{\"1\":\"2019\",\"2\":\"E-Bikes\",\"3\":\"2667921\",\"4\":\"2.667.921 €\"},{\"1\":\"2019\",\"2\":\"Gravel\",\"3\":\"1169038\",\"4\":\"1.169.038 €\"},{\"1\":\"2019\",\"2\":\"Hybrid / City\",\"3\":\"617064\",\"4\":\"617.064 €\"},{\"1\":\"2019\",\"2\":\"Mountain\",\"3\":\"4674327\",\"4\":\"4.674.327 €\"},{\"1\":\"2019\",\"2\":\"Road\",\"3\":\"5889525\",\"4\":\"5.889.525 €\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# Step 2 - Visualize\nsales_by_year_cat_1 %>%\n  ggplot(aes(x = year, y = sales, fill = category_1)) +\n  geom_col() +\n  facet_wrap(~ category_1) +\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title = \"Revenue by year and main category\",\n    subtitle = \"Each product category has an upward trend\",\n    fill = \"Main category\" # Changes the legend name\n  )\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# 7.0 Writing Files ----\n\n# 7.1 Excel ----\nlibrary(\"writexl\")\nbike_orderlines_wrangled %>%\n  write_xlsx(\"../../bikes/02_wrangled_data/bike_orderlines.xlsx\")\n\n# 7.2 CSV ----\nbike_orderlines_wrangled %>% \n  write_csv(\"../../bikes/02_wrangled_data/bike_orderlines.csv\")\n# 7.3 RDS ----\nbike_orderlines_wrangled %>% \n  write_rds(\"../../bikes/02_wrangled_data/bike_orderlines.rds\")\n```\n:::\n\n\n# Challenge\n\n\n\n::: {.cell hash='01_tidyverse_cache/html/plot_cc048c0842d3e6283fa7f9826eb97a28'}\n\n```{.r .cell-code}\n# 6.3 Sales by location\n\n# Step 1 - Manipulate\nsales_by_location_tbl <- bike_orderlines_wrangled_tbl %>%\n  # Seperate city and state into two separate columns\n  separate(col = location,\n           into = c(\"city\",\"state\"),\n           sep = \", \",\n           convert = T) %>%\n  \n  # Select columns\n  select(state, total_price) %>%\n  \n  # Grouping by year and summarizing sales\n  group_by(state) %>% \n  summarize(sales = sum(total_price)) %>%\n  \n  # Optional: Add a column that turns the numbers into a currency format \n  # (makes it in the plot optically more appealing)\n  # mutate(sales_text = scales::dollar(sales)) <- Works for dollar values\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n \n# Step 2 - Visualize\nsales_by_location_tbl %>%\n  \n  # Setup canvas with the columns year (x-axis) and sales (y-axis)\n  ggplot(aes(x = state, y = sales)) +\n  \n  # Geometries\n  geom_col(fill = \"#2DC6D6\") + # Use geom_col for a bar plot\n  geom_label(aes(label = sales_text)) + # Adding labels to the bars\n  geom_smooth(method = \"lm\", se = FALSE) + # Adding a trendline\n  \n  # Formatting\n  # scale_y_continuous(labels = scales::dollar) + # Change the y-axis. \n  # Again, we have to adjust it for euro values\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title    = \"Revenue by location\",\n    subtitle = \"Upward Trend\",\n    x = \"\", # Override defaults for x and y\n    y = \"Revenue\"\n  ) +\n\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/plot-1.png){width=1920}\n:::\n\n```{.r .cell-code}\n# 6.4 Sales by location and year\n# Step 1 - Manipulate\nsales_by_location_and_year_tbl <- bike_orderlines_wrangled_tbl %>%\n  # Seperate city and state into two separate columns\n  separate(col = location,\n           into = c(\"city\",\"state\"),\n           sep = \", \",\n           convert = T) %>%\n  \n  # Select columns and add a year\n  select(state, total_price, order_date) %>%\n  mutate(year = year(order_date)) %>%\n  \n  # Group by and summarize year and main catgegory\n  group_by(state, year) %>%\n  summarise(sales = sum(total_price)) %>%\n  ungroup() %>%\n  \n  # Format $ Text\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `summarise()` has grouped output by 'state'. You can override using the\n#> `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n# Step 2 - Visualize\nsales_by_location_and_year_tbl %>%\n  \n  # Set up x, y, fill\n  ggplot(aes(x = year, y = sales, fill = state)) +\n  \n  # Geometries\n  geom_col() + # Run up to here to get a stacked bar plot\n  \n  # Facet\n  facet_wrap(~ state) +\n  \n  # Formatting\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title = \"Revenue by location and year\",\n    subtitle = \"Each year has an upward trend\",\n    fill = \"Year\" # Changes the legend name\n  ) +\n\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/plot-2.png){width=1920}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}