{
  "hash": "59692f443b93426d347a432d4418355c",
  "result": {
    "markdown": "---\ntitle: \"Data Wrangling\"\nauthor: \"Julius von Sulecki\"\n---\n\n\nI first attempted to replicate both the example and business case, which can be found in the DATA_WRANGLING.R and DATA_WRANGLING_BUSINESS_CASE.R files. After completing this task, I began working on the challenge with a reduced dataset, due to limitations with my hardware.\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-1_39001a8552c26eb93bf971eb69db2706'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> -- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\n#> v dplyr     1.1.2     v readr     2.1.4\n#> v forcats   1.0.0     v stringr   1.5.0\n#> v ggplot2   3.4.2     v tibble    3.2.1\n#> v lubridate 1.9.2     v tidyr     1.3.0\n#> v purrr     1.0.1     \n#> -- Conflicts ------------------------------------------ tidyverse_conflicts() --\n#> x dplyr::filter() masks stats::filter()\n#> x dplyr::lag()    masks stats::lag()\n#> i Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(data.table)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'data.table'\n#> \n#> The following objects are masked from 'package:lubridate':\n#> \n#>     hour, isoweek, mday, minute, month, quarter, second, wday, week,\n#>     yday, year\n#> \n#> The following objects are masked from 'package:dplyr':\n#> \n#>     between, first, last\n#> \n#> The following object is masked from 'package:purrr':\n#> \n#>     transpose\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(vroom)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'vroom'\n#> \n#> The following objects are masked from 'package:readr':\n#> \n#>     as.col_spec, col_character, col_date, col_datetime, col_double,\n#>     col_factor, col_guess, col_integer, col_logical, col_number,\n#>     col_skip, col_time, cols, cols_condense, cols_only, date_names,\n#>     date_names_lang, date_names_langs, default_locale, fwf_cols,\n#>     fwf_empty, fwf_positions, fwf_widths, locale, output_column,\n#>     problems, spec\n```\n:::\n\n```{.r .cell-code}\n## Data Loading ##\n# Using the reduced data set\n\n# loading patent.tsv file\ncol_types_patent <- list(\n  id = col_character(),\n  date = col_date(\"%Y-%m-%d\"),\n  num_claims = col_double()\n)\npatent_tbl <- vroom(\n  file       = \"../../Patent_data_reduced/patent.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types_patent,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\npatent_tbl <- rename(patent_tbl,patent_id = id) # Rename id to patent_id to make merging easier\n```\n:::\n\nI followed a similar process for loading the assignee.tsv, patent_assignee.tsv, and uspc.tsv files as I did for the patent.tsv file.\nTo determine the appropriate column names and data types for each file, I reviewed the file contents and analyzed the variable types present in each column.\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-2_4cd04304999106e395f2f2dd8ead25e8'}\n\n```{.r .cell-code}\n# loading assignee.tsv file\ncol_types_assignee <- list(\n  id = col_character(),\n  type = col_integer(),\n  organization = col_character()\n)\nassignee_tbl <- vroom(\n  file       = \"../../Patent_data_reduced/assignee.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types_assignee,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\nassignee_tbl <- rename(assignee_tbl,assignee_id = id) # Rename id to assignee_id to make merging easier\n\n# loading patent_assignee.tsv file\ncol_types_patent_assignee <- list(\n  patent_id = col_character(),\n  assignee_id = col_character()\n)\npatent_assignee_tbl <- vroom(\n  file       = \"../../Patent_data_reduced/patent_assignee.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types_patent_assignee,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n\n# loading uspc.tsv file\ncol_types_uspc <- list(\n  patent_id = col_character(),\n  mainclass_id = col_character(),\n  sequence = col_integer()\n)\nuspc_tbl <- vroom(\n  file       = \"../../Patent_data_reduced/uspc.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types_uspc,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n```\n:::\n\n# Patent Dominance\nThe following steps were performed for the patent dominance task.\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-3_7c7293dafa2b891761d1240256357693'}\n\n```{.r .cell-code}\n# Convert patent_assignee_tbl to data.table and group it's entries by assignee_id. Then the number of elements per group is stored in a column patents.\npatent_dominance_dt <- as.data.table(patent_assignee_tbl)[,.(patents = .N),by = assignee_id]\n# Combine patent_activity_dt with assignee_tbl by patent_id to combine assignee info with company-name and -type info.\npatent_dominance_dt <- as.data.table(merge(as_tibble(patent_dominance_dt),assignee_tbl,by=\"assignee_id\")) %>%\n                                    .[type == 2] %>% # Then the data table can be filtered by only allowing US Companies or Corporations\n                                    .[order(-patents),patents,organization] # Afterwards the list is sorted by the number of patents.\n                                                                            # Only the patents and organization name column is kept for better looking output.\nprint(\"What US company / corporation has the most patents?\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"What US company / corporation has the most patents?\"\n```\n:::\n\n```{.r .cell-code}\nprint(patent_dominance_dt[1]) # Take the first element of the ordered list.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>                                   organization patents\n#> 1: International Business Machines Corporation    7547\n```\n:::\n\n```{.r .cell-code}\nprint(\"List the 10 US companies with the most assigned/granted patents.\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"List the 10 US companies with the most assigned/granted patents.\"\n```\n:::\n\n```{.r .cell-code}\nprint(patent_dominance_dt[1:10]) # Take the first 10 elements of the ordered list.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>                                    organization patents\n#>  1: International Business Machines Corporation    7547\n#>  2:                       Microsoft Corporation    3165\n#>  3:                                 Google Inc.    2668\n#>  4:                       QUALCOMM Incorporated    2597\n#>  5:                                  Apple Inc.    2201\n#>  6:                    General Electric Company    1873\n#>  7:   Hewlett-Packard Development Company, L.P.    1638\n#>  8:          AT&T INTELLECTUAL PROPERTY I, L.P.    1625\n#>  9:                           Intel Corporation    1616\n#> 10:         GM Global Technology Operations LLC    1533\n```\n:::\n:::\n\n# Recent Patent Activity\nSimilarly I performed following steps (some similar to patent dominance) to find the top companies by patent activity in august of 2014:\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-4_fac7f3b10aa601b88bcc4a9c249edcbe'}\n\n```{.r .cell-code}\n# Take patent_tbl and separate into year, month and day and convert to data.table.\npatent_activity_dt <- patent_tbl %>% separate(col = date,into = c(\"year\",\"month\",\"day\"),sep = \"-\",convert = T) %>%\n                                 as.data.table() %>% .[year == 2014 & month == 8] # Then filter by august (8) 2014.\n# Combine patent_activity_dt with patent_assignee_tbl by patent_id to combine patent info with assignee info..\npatent_activity_dt <- as.data.table(merge(as_tibble(patent_activity_dt),patent_assignee_tbl,by=\"patent_id\")) %>%\n                                   .[,.(patents = .N),by = assignee_id] # Group and sum up by assignee_id.\n# Combine patent_activity_dt with assignee_tbl by patent_id to combine assignee info with company-name and -type info.\npatent_activity_dt <- as.data.table(merge(as_tibble(patent_activity_dt),assignee_tbl,by=\"assignee_id\")) %>%\n                                    .[order(-patents),.(organization,type,patents)] # Order by number of patents and discard assignee_id.\n\nprint(\"What US company had the most patents granted in August 2014?\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"What US company had the most patents granted in August 2014?\"\n```\n:::\n\n```{.r .cell-code}\nprint(patent_activity_dt[type == 2][1]) # Filter by US Company or Corporation and take the first element of the ordered list.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>                                   organization type patents\n#> 1: International Business Machines Corporation    2     718\n```\n:::\n\n```{.r .cell-code}\nprint(\"List the top 10 companies with the most new granted patents for August 2014.\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"List the top 10 companies with the most new granted patents for August 2014.\"\n```\n:::\n\n```{.r .cell-code}\nprint(patent_activity_dt[1:10]) # Take the first 10 elements of the ordered list.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>                                    organization type patents\n#>  1: International Business Machines Corporation    2     718\n#>  2:               Samsung Electronics Co., Ltd.    3     524\n#>  3:                      Canon Kabushiki Kaisha    3     361\n#>  4:                       Microsoft Corporation    2     337\n#>  5:                            Sony Corporation    3     269\n#>  6:                                 Google Inc.    2     240\n#>  7:                       QUALCOMM Incorporated    2     223\n#>  8:                                  Apple Inc.    2     222\n#>  9:                    Kabushiki Kaisha Toshiba    3     213\n#> 10:                         LG Electronics Inc.    3     211\n```\n:::\n:::\n\n# Innovation In Tech\nSimilarly I performed these steps (some similar to patent dominance and recent patent activity) to find the top main classes:\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-5_27ffedb4ab7823f7a2ade4cf239b15a7'}\n\n```{.r .cell-code}\n# For most innovative tech sensor group and sum the uspc_tbl by mainclass_id.\nmost_innovative_tech_sectors <- as.data.table(uspc_tbl)[,.(patents = .N),by = mainclass_id] %>%\n                                            .[order(-patents),patents,mainclass_id] # Then order the list by descending patents.\n# Retrieve the assignee_ids of the 10 companies that have the most patents and only keep the assignee_ids of those.\ntop_USPTO_main_classes <- as.data.table(patent_assignee_tbl)[,.(patents = .N),by = assignee_id][1:10][,assignee_id]\n# Search through the patent_assignee_tbl again and only keep those patents that come from one of those 10 companies.\ntop_USPTO_main_classes <- as.data.table(patent_assignee_tbl)[assignee_id %in% top_USPTO_main_classes]\n# With the list of patents combine it by the patent_id with the uspc_tbl.\ntop_USPTO_main_classes <- as.data.table(merge(as_tibble(top_USPTO_main_classes),uspc_tbl,by=\"patent_id\")) %>%\n                                        .[,.(patents = .N),by = mainclass_id] %>% # Group and sum up by mainclass_id.\n                                        .[order(-patents),patents,mainclass_id] # Then order the list by descending patents.\n\nprint(\"What is the most innovative tech sector?\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"What is the most innovative tech sector?\"\n```\n:::\n\n```{.r .cell-code}\nprint(most_innovative_tech_sectors[1]) # Take the first element of the ordered list.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>    mainclass_id patents\n#> 1:          257   40526\n```\n:::\n\n```{.r .cell-code}\nprint(\"For the top 10 companies (worldwide) with the most patents, what are the top 5 USPTO tech main classes?\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"For the top 10 companies (worldwide) with the most patents, what are the top 5 USPTO tech main classes?\"\n```\n:::\n\n```{.r .cell-code}\nprint(top_USPTO_main_classes[1:10]) # Take the first 10 elements of the ordered list.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>     mainclass_id patents\n#>  1:          370    1672\n#>  2:          455    1640\n#>  3:          375     743\n#>  4:          257     701\n#>  5:          166     699\n#>  6:          709     417\n#>  7:          244     344\n#>  8:          438     324\n#>  9:          398     323\n#> 10:          507     179\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}